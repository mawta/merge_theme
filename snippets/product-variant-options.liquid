{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.


  Usage:
  {% render 'product-variant-options',
  product: product,
  option: option,
  block: block
  %}
{% endcomment %}

{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id
-%}

{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}

  {% if typeCasePhone == true %}
    <option value="" disabled selected hidden>-- Chọn --</option>
    {% break %}
  {% endif %}
{%- endfor -%}

{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}

  {% if typeCasePhone == true %}
    <option value="{{ value | escape }}" {% if option_disabled %}disabled{% endif %}>{{ value }}</option>
  {%- elsif block.settings.picker_type == 'button' -%}
    <input
      type="radio"
      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      name="{{ option.name }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option_disabled %}class="disabled" disabled{% endif %}
      required
    >
    <label
      for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      class="swatch-elment {% if option.name == "Color" %}color {% endif %} {{ value | handle }}-swatch"
      {% if option.name == 'Color' %}
        style=" background-color: {% render 'product-color' , color: value %} "
      {% endif %}
    >
      {% if option.name != 'Color' %}
        {{ value }}
        {% render 'product-best-selling', product: product, value: value %}
      {% endif %}
      <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      {% if option.name == 'Color' %}
        <div class="tooltip">{{ value }}</div>
      {% endif %}
    </label>
  {%- elsif block.settings.picker_type == 'dropdown' -%}
    <option value="{{ value | escape }}" {% if option_disabled %}disabled{% endif %}>{{ value }}</option>
  {%- endif -%}

  {%- if forloop.last -%}
    <div class="option-required-warning" style="color: red; font-size: 0.9em; display: none; margin-top: 4px;">
      {{ option.name }} is required. Please select an option.
    </div>
  {%- endif -%}
{%- endfor -%}

<script>
  // Đảm bảo không radio nào được checked mặc định khi có thay đổi DOM (observer)
  function uncheckAllRadiosInProductForm() {
    document.querySelectorAll('.product-form__input input[type="radio"]').forEach(function(radio) {
      if (!radio.matches(':checked')) {
        radio.checked = false;
        radio.removeAttribute('checked');
      }
    });
  }
  function observeProductFormRadios() {
    var productFormInputs = document.querySelectorAll('.product-form__input');
    productFormInputs.forEach(function(productForm) {
      const observer = new MutationObserver(() => {
        uncheckAllRadiosInProductForm();
      });
      observer.observe(productForm, { childList: true, subtree: true });
    });
  }
  observeProductFormRadios();
</script>
<script>
  (function() {
    // --- PHẦN KHỞI TẠO (VẪN GIỮ NGUYÊN) ---
    const productForm = document.querySelector('form[action^="/cart/add"]');
    if (!productForm) {
      console.error("Validation Script: Không tìm thấy form sản phẩm.");
      return;
    }
    const formId = productForm.id;
    if (!formId) {
      console.error("Validation Script: Form sản phẩm cần có ID.");
      return;
    }
    const requiredOptionGroups = new Set(
      Array.from(document.querySelectorAll(`input[type="radio"][required][form="${formId}"]`))
           .map(radio => radio.name)
    );
  
    function allOptionsSelected() {
      for (const groupName of requiredOptionGroups) {
        if (!document.querySelector(`input[type="radio"][name="${groupName}"][form="${formId}"]:checked`)) {
          return false;
        }
      }
      return true;
    }
    
    // --- PHẦN XỬ LÝ SỰ KIỆN (ĐÃ THAY ĐỔI) ---
    // Lắng nghe sự kiện click trên toàn bộ trang
    document.addEventListener('click', function(event) {
      // Kiểm tra xem phần tử được click có phải là nút Add to Cart hoặc nằm trong nút đó không
      const addToCartBtn = event.target.closest('.customily-add-to-cart-btn');
  
      // Nếu không phải nút Add to Cart, thì không làm gì cả
      if (!addToCartBtn) {
        return;
      }
  
      // Nếu ĐÚNG là nút Add to Cart, thì chạy logic kiểm tra
      if (!allOptionsSelected()) {
        // Nếu chưa chọn đủ:
        event.preventDefault();
        event.stopPropagation();
  
        // a. Lắc nút
        addToCartBtn.classList.add('shake');
        setTimeout(() => addToCartBtn.classList.remove('shake'), 500);
  
        // b. Hiện cảnh báo chung
        let globalWarning = productForm.querySelector('.global-option-warning');
        if (!globalWarning) {
          globalWarning = document.createElement('div');
          globalWarning.className = 'global-option-warning';
          globalWarning.style.cssText = 'color: red; font-size: 1em; margin-bottom: 10px; text-align: center;';
          globalWarning.textContent = 'Vui lòng chọn đầy đủ các tùy chọn!';
          productForm.prepend(globalWarning);
        }
        globalWarning.style.display = 'block';
  
        // c. Hiện cảnh báo cho từng option thiếu
        requiredOptionGroups.forEach(name => {
          const isSelected = !!document.querySelector(`input[type="radio"][name="${name}"][form="${formId}"]:checked`);
          const fieldset = document.querySelector(`input[name="${name}"][form="${formId}"]`)?.closest('fieldset');
          const warningEl = fieldset?.querySelector('.option-required-warning');
          if (warningEl) {
            warningEl.style.display = isSelected ? 'none' : 'block';
          }
        });
        
      } else {
        // Nếu đã chọn đủ, ẩn các cảnh báo và để cho script khác xử lý
        productForm.querySelectorAll('.global-option-warning').forEach(w => w.style.display = 'none');
        document.querySelectorAll(`fieldset .option-required-warning`).forEach(w => w.style.display = 'none');
      }
    }, true);
  
    // --- CÁC PHẦN KHÁC (VẪN GIỮ NGUYÊN) ---
    document.addEventListener('change', function(event) {
      if (event.target.matches(`input[type="radio"][required][form="${formId}"]`)) {
        event.target.closest('fieldset')?.querySelector('.option-required-warning')?.style.display = 'none';
      }
    });
  
    if (!document.querySelector('#shake-animation-style')) {
      const style = document.createElement('style');
      style.id = 'shake-animation-style';
      style.innerHTML = `
        .customily-add-to-cart-btn.shake { animation: shake 0.5s; }
        @keyframes shake {
          0%, 100% { transform: translateX(0); }
          20%, 60% { transform: translateX(-8px); }
          40%, 80% { transform: translateX(8px); }
        }`;
      document.head.appendChild(style);
    }
  })();
</script>